package orderHistory.entity;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class OrderHistorysExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table order_historys
	 * @mbg.generated  Sat Sep 14 06:48:47 JST 2024
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table order_historys
	 * @mbg.generated  Sat Sep 14 06:48:47 JST 2024
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table order_historys
	 * @mbg.generated  Sat Sep 14 06:48:47 JST 2024
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table order_historys
	 * @mbg.generated  Sat Sep 14 06:48:47 JST 2024
	 */
	public OrderHistorysExample() {
		oredCriteria = new ArrayList<>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table order_historys
	 * @mbg.generated  Sat Sep 14 06:48:47 JST 2024
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table order_historys
	 * @mbg.generated  Sat Sep 14 06:48:47 JST 2024
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table order_historys
	 * @mbg.generated  Sat Sep 14 06:48:47 JST 2024
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table order_historys
	 * @mbg.generated  Sat Sep 14 06:48:47 JST 2024
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table order_historys
	 * @mbg.generated  Sat Sep 14 06:48:47 JST 2024
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table order_historys
	 * @mbg.generated  Sat Sep 14 06:48:47 JST 2024
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table order_historys
	 * @mbg.generated  Sat Sep 14 06:48:47 JST 2024
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table order_historys
	 * @mbg.generated  Sat Sep 14 06:48:47 JST 2024
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table order_historys
	 * @mbg.generated  Sat Sep 14 06:48:47 JST 2024
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table order_historys
	 * @mbg.generated  Sat Sep 14 06:48:47 JST 2024
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table order_historys
	 * @mbg.generated  Sat Sep 14 06:48:47 JST 2024
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1, Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		protected void addCriterionForJDBCDate(String condition, Date value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			addCriterion(condition, new java.sql.Date(value.getTime()), property);
		}

		protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property + " cannot be null or empty");
			}
			List<java.sql.Date> dateList = new ArrayList<>();
			Iterator<Date> iter = values.iterator();
			while (iter.hasNext()) {
				dateList.add(new java.sql.Date(iter.next().getTime()));
			}
			addCriterion(condition, dateList, property);
		}

		protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
		}

		public Criteria andOrderCodeIsNull() {
			addCriterion("order_code is null");
			return (Criteria) this;
		}

		public Criteria andOrderCodeIsNotNull() {
			addCriterion("order_code is not null");
			return (Criteria) this;
		}

		public Criteria andOrderCodeEqualTo(String value) {
			addCriterion("order_code =", value, "orderCode");
			return (Criteria) this;
		}

		public Criteria andOrderCodeNotEqualTo(String value) {
			addCriterion("order_code <>", value, "orderCode");
			return (Criteria) this;
		}

		public Criteria andOrderCodeGreaterThan(String value) {
			addCriterion("order_code >", value, "orderCode");
			return (Criteria) this;
		}

		public Criteria andOrderCodeGreaterThanOrEqualTo(String value) {
			addCriterion("order_code >=", value, "orderCode");
			return (Criteria) this;
		}

		public Criteria andOrderCodeLessThan(String value) {
			addCriterion("order_code <", value, "orderCode");
			return (Criteria) this;
		}

		public Criteria andOrderCodeLessThanOrEqualTo(String value) {
			addCriterion("order_code <=", value, "orderCode");
			return (Criteria) this;
		}

		public Criteria andOrderCodeLike(String value) {
			addCriterion("order_code like", value, "orderCode");
			return (Criteria) this;
		}

		public Criteria andOrderCodeNotLike(String value) {
			addCriterion("order_code not like", value, "orderCode");
			return (Criteria) this;
		}

		public Criteria andOrderCodeIn(List<String> values) {
			addCriterion("order_code in", values, "orderCode");
			return (Criteria) this;
		}

		public Criteria andOrderCodeNotIn(List<String> values) {
			addCriterion("order_code not in", values, "orderCode");
			return (Criteria) this;
		}

		public Criteria andOrderCodeBetween(String value1, String value2) {
			addCriterion("order_code between", value1, value2, "orderCode");
			return (Criteria) this;
		}

		public Criteria andOrderCodeNotBetween(String value1, String value2) {
			addCriterion("order_code not between", value1, value2, "orderCode");
			return (Criteria) this;
		}

		public Criteria andOrderDateIsNull() {
			addCriterion("order_date is null");
			return (Criteria) this;
		}

		public Criteria andOrderDateIsNotNull() {
			addCriterion("order_date is not null");
			return (Criteria) this;
		}

		public Criteria andOrderDateEqualTo(Date value) {
			addCriterionForJDBCDate("order_date =", value, "orderDate");
			return (Criteria) this;
		}

		public Criteria andOrderDateNotEqualTo(Date value) {
			addCriterionForJDBCDate("order_date <>", value, "orderDate");
			return (Criteria) this;
		}

		public Criteria andOrderDateGreaterThan(Date value) {
			addCriterionForJDBCDate("order_date >", value, "orderDate");
			return (Criteria) this;
		}

		public Criteria andOrderDateGreaterThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("order_date >=", value, "orderDate");
			return (Criteria) this;
		}

		public Criteria andOrderDateLessThan(Date value) {
			addCriterionForJDBCDate("order_date <", value, "orderDate");
			return (Criteria) this;
		}

		public Criteria andOrderDateLessThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("order_date <=", value, "orderDate");
			return (Criteria) this;
		}

		public Criteria andOrderDateIn(List<Date> values) {
			addCriterionForJDBCDate("order_date in", values, "orderDate");
			return (Criteria) this;
		}

		public Criteria andOrderDateNotIn(List<Date> values) {
			addCriterionForJDBCDate("order_date not in", values, "orderDate");
			return (Criteria) this;
		}

		public Criteria andOrderDateBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("order_date between", value1, value2, "orderDate");
			return (Criteria) this;
		}

		public Criteria andOrderDateNotBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("order_date not between", value1, value2, "orderDate");
			return (Criteria) this;
		}

		public Criteria andProductCodeIsNull() {
			addCriterion("product_code is null");
			return (Criteria) this;
		}

		public Criteria andProductCodeIsNotNull() {
			addCriterion("product_code is not null");
			return (Criteria) this;
		}

		public Criteria andProductCodeEqualTo(String value) {
			addCriterion("product_code =", value, "productCode");
			return (Criteria) this;
		}

		public Criteria andProductCodeNotEqualTo(String value) {
			addCriterion("product_code <>", value, "productCode");
			return (Criteria) this;
		}

		public Criteria andProductCodeGreaterThan(String value) {
			addCriterion("product_code >", value, "productCode");
			return (Criteria) this;
		}

		public Criteria andProductCodeGreaterThanOrEqualTo(String value) {
			addCriterion("product_code >=", value, "productCode");
			return (Criteria) this;
		}

		public Criteria andProductCodeLessThan(String value) {
			addCriterion("product_code <", value, "productCode");
			return (Criteria) this;
		}

		public Criteria andProductCodeLessThanOrEqualTo(String value) {
			addCriterion("product_code <=", value, "productCode");
			return (Criteria) this;
		}

		public Criteria andProductCodeLike(String value) {
			addCriterion("product_code like", value, "productCode");
			return (Criteria) this;
		}

		public Criteria andProductCodeNotLike(String value) {
			addCriterion("product_code not like", value, "productCode");
			return (Criteria) this;
		}

		public Criteria andProductCodeIn(List<String> values) {
			addCriterion("product_code in", values, "productCode");
			return (Criteria) this;
		}

		public Criteria andProductCodeNotIn(List<String> values) {
			addCriterion("product_code not in", values, "productCode");
			return (Criteria) this;
		}

		public Criteria andProductCodeBetween(String value1, String value2) {
			addCriterion("product_code between", value1, value2, "productCode");
			return (Criteria) this;
		}

		public Criteria andProductCodeNotBetween(String value1, String value2) {
			addCriterion("product_code not between", value1, value2, "productCode");
			return (Criteria) this;
		}

		public Criteria andQuantityIsNull() {
			addCriterion("quantity is null");
			return (Criteria) this;
		}

		public Criteria andQuantityIsNotNull() {
			addCriterion("quantity is not null");
			return (Criteria) this;
		}

		public Criteria andQuantityEqualTo(Integer value) {
			addCriterion("quantity =", value, "quantity");
			return (Criteria) this;
		}

		public Criteria andQuantityNotEqualTo(Integer value) {
			addCriterion("quantity <>", value, "quantity");
			return (Criteria) this;
		}

		public Criteria andQuantityGreaterThan(Integer value) {
			addCriterion("quantity >", value, "quantity");
			return (Criteria) this;
		}

		public Criteria andQuantityGreaterThanOrEqualTo(Integer value) {
			addCriterion("quantity >=", value, "quantity");
			return (Criteria) this;
		}

		public Criteria andQuantityLessThan(Integer value) {
			addCriterion("quantity <", value, "quantity");
			return (Criteria) this;
		}

		public Criteria andQuantityLessThanOrEqualTo(Integer value) {
			addCriterion("quantity <=", value, "quantity");
			return (Criteria) this;
		}

		public Criteria andQuantityIn(List<Integer> values) {
			addCriterion("quantity in", values, "quantity");
			return (Criteria) this;
		}

		public Criteria andQuantityNotIn(List<Integer> values) {
			addCriterion("quantity not in", values, "quantity");
			return (Criteria) this;
		}

		public Criteria andQuantityBetween(Integer value1, Integer value2) {
			addCriterion("quantity between", value1, value2, "quantity");
			return (Criteria) this;
		}

		public Criteria andQuantityNotBetween(Integer value1, Integer value2) {
			addCriterion("quantity not between", value1, value2, "quantity");
			return (Criteria) this;
		}

		public Criteria andShopCodeIsNull() {
			addCriterion("shop_code is null");
			return (Criteria) this;
		}

		public Criteria andShopCodeIsNotNull() {
			addCriterion("shop_code is not null");
			return (Criteria) this;
		}

		public Criteria andShopCodeEqualTo(String value) {
			addCriterion("shop_code =", value, "shopCode");
			return (Criteria) this;
		}

		public Criteria andShopCodeNotEqualTo(String value) {
			addCriterion("shop_code <>", value, "shopCode");
			return (Criteria) this;
		}

		public Criteria andShopCodeGreaterThan(String value) {
			addCriterion("shop_code >", value, "shopCode");
			return (Criteria) this;
		}

		public Criteria andShopCodeGreaterThanOrEqualTo(String value) {
			addCriterion("shop_code >=", value, "shopCode");
			return (Criteria) this;
		}

		public Criteria andShopCodeLessThan(String value) {
			addCriterion("shop_code <", value, "shopCode");
			return (Criteria) this;
		}

		public Criteria andShopCodeLessThanOrEqualTo(String value) {
			addCriterion("shop_code <=", value, "shopCode");
			return (Criteria) this;
		}

		public Criteria andShopCodeLike(String value) {
			addCriterion("shop_code like", value, "shopCode");
			return (Criteria) this;
		}

		public Criteria andShopCodeNotLike(String value) {
			addCriterion("shop_code not like", value, "shopCode");
			return (Criteria) this;
		}

		public Criteria andShopCodeIn(List<String> values) {
			addCriterion("shop_code in", values, "shopCode");
			return (Criteria) this;
		}

		public Criteria andShopCodeNotIn(List<String> values) {
			addCriterion("shop_code not in", values, "shopCode");
			return (Criteria) this;
		}

		public Criteria andShopCodeBetween(String value1, String value2) {
			addCriterion("shop_code between", value1, value2, "shopCode");
			return (Criteria) this;
		}

		public Criteria andShopCodeNotBetween(String value1, String value2) {
			addCriterion("shop_code not between", value1, value2, "shopCode");
			return (Criteria) this;
		}

		public Criteria andSellerIsNull() {
			addCriterion("seller is null");
			return (Criteria) this;
		}

		public Criteria andSellerIsNotNull() {
			addCriterion("seller is not null");
			return (Criteria) this;
		}

		public Criteria andSellerEqualTo(String value) {
			addCriterion("seller =", value, "seller");
			return (Criteria) this;
		}

		public Criteria andSellerNotEqualTo(String value) {
			addCriterion("seller <>", value, "seller");
			return (Criteria) this;
		}

		public Criteria andSellerGreaterThan(String value) {
			addCriterion("seller >", value, "seller");
			return (Criteria) this;
		}

		public Criteria andSellerGreaterThanOrEqualTo(String value) {
			addCriterion("seller >=", value, "seller");
			return (Criteria) this;
		}

		public Criteria andSellerLessThan(String value) {
			addCriterion("seller <", value, "seller");
			return (Criteria) this;
		}

		public Criteria andSellerLessThanOrEqualTo(String value) {
			addCriterion("seller <=", value, "seller");
			return (Criteria) this;
		}

		public Criteria andSellerLike(String value) {
			addCriterion("seller like", value, "seller");
			return (Criteria) this;
		}

		public Criteria andSellerNotLike(String value) {
			addCriterion("seller not like", value, "seller");
			return (Criteria) this;
		}

		public Criteria andSellerIn(List<String> values) {
			addCriterion("seller in", values, "seller");
			return (Criteria) this;
		}

		public Criteria andSellerNotIn(List<String> values) {
			addCriterion("seller not in", values, "seller");
			return (Criteria) this;
		}

		public Criteria andSellerBetween(String value1, String value2) {
			addCriterion("seller between", value1, value2, "seller");
			return (Criteria) this;
		}

		public Criteria andSellerNotBetween(String value1, String value2) {
			addCriterion("seller not between", value1, value2, "seller");
			return (Criteria) this;
		}

		public Criteria andBuyerIsNull() {
			addCriterion("buyer is null");
			return (Criteria) this;
		}

		public Criteria andBuyerIsNotNull() {
			addCriterion("buyer is not null");
			return (Criteria) this;
		}

		public Criteria andBuyerEqualTo(String value) {
			addCriterion("buyer =", value, "buyer");
			return (Criteria) this;
		}

		public Criteria andBuyerNotEqualTo(String value) {
			addCriterion("buyer <>", value, "buyer");
			return (Criteria) this;
		}

		public Criteria andBuyerGreaterThan(String value) {
			addCriterion("buyer >", value, "buyer");
			return (Criteria) this;
		}

		public Criteria andBuyerGreaterThanOrEqualTo(String value) {
			addCriterion("buyer >=", value, "buyer");
			return (Criteria) this;
		}

		public Criteria andBuyerLessThan(String value) {
			addCriterion("buyer <", value, "buyer");
			return (Criteria) this;
		}

		public Criteria andBuyerLessThanOrEqualTo(String value) {
			addCriterion("buyer <=", value, "buyer");
			return (Criteria) this;
		}

		public Criteria andBuyerLike(String value) {
			addCriterion("buyer like", value, "buyer");
			return (Criteria) this;
		}

		public Criteria andBuyerNotLike(String value) {
			addCriterion("buyer not like", value, "buyer");
			return (Criteria) this;
		}

		public Criteria andBuyerIn(List<String> values) {
			addCriterion("buyer in", values, "buyer");
			return (Criteria) this;
		}

		public Criteria andBuyerNotIn(List<String> values) {
			addCriterion("buyer not in", values, "buyer");
			return (Criteria) this;
		}

		public Criteria andBuyerBetween(String value1, String value2) {
			addCriterion("buyer between", value1, value2, "buyer");
			return (Criteria) this;
		}

		public Criteria andBuyerNotBetween(String value1, String value2) {
			addCriterion("buyer not between", value1, value2, "buyer");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table order_historys
	 * @mbg.generated  Sat Sep 14 06:48:47 JST 2024
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table order_historys
     *
     * @mbg.generated do_not_delete_during_merge Sun Sep 18 20:43:32 JST 2022
     */
    public static class Criteria extends GeneratedCriteria {
        protected Criteria() {
            super();
        }
    }
}